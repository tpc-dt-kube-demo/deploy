@Library('dynatrace@master') _

pipeline {
  agent {
    label 'git'
  }
  parameters {
    choice(name: 'namespace', choices: ['staging', 'production'], description: 'where to test')
  }
  stages {
    stage('Health Check') {
      steps {
        container('curl') {
          echo "Execute CURL command to verify UI is up..."
          executeCurl(1, "http://front-end.${params.namespace}")
        }
      }
    }
    stage('Run e2e load test') {
      steps {
        // calls script imported into Jenkins from this library
        // https://github.com/dynatrace-innovationlab/jenkins-extensions
        container('jmeter') {
          // need to remove report folder from workspace else jmeter errors
          sh "rm -rf e2eCheck"
          // remove logs from workspace
          sh "rm -f e2eCheck_result.tlf"
          sh "rm -f output.txt"

          script {
            def status = executeJMeter ( 
              scriptName: "jmeter/front-end_e2e_load.jmx",
              resultsDir: "e2eCheck",
              serverUrl: "front-end.${params.namespace}", 
              serverPort: 80,
              checkPath: '/',
              vuCount: 5,
              loopCount: 10000,
              LTN: "${params.namespace}_loadtest_${env.BUILD_ID}",
              funcValidation: false,
              avgRtValidation: 4000
            )
            if (status != 0) {
              currentBuild.result = 'FAILED'
              error "e2e load test failed."
            }
          }
        }
      }
    }
  }
}

def executeCurl(iterations, url) {
    for (int i = 0; i < iterations; i++) {
        sh "echo calling ${url}"
        sh "curl ${url} -f"
    }
}
